# .github/workflows/staging-client.yml
name: Compile and push client image for staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
#   pull_request:
  push:
    branches: ["dev"]
#     types: ["closed"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # login with Docker
      - uses: docker/login-action@v1
        name: Login to Docker Hub
        with:
          # generate some credentials from Dockerhub and store them into the repo secrets
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # prepare buildx for docker
      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      # build an push the newly created image
      - uses: docker/build-push-action@v2
        name: Build and push
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONT_STAGING }}:latest
  deployment:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Deploy Stage
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://ops.hamilton4.wns.wilders.dev/hooks/update'
        method: 'GET'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{}'
        
  # webhook:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     - name: Send webhook request
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: fjogeleit/http-request-action@v1
  #       with:
  #         url: 'https://ops.hamilton4.wns.wilders.dev/hooks/update'
  #         method: 'GET'
  #         customHeaders: '{"Content-Type": "application/json"}'
  #         data: '{}'
